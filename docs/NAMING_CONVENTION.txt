NAMING CONVENTION


1. Именование пакетов

Имена пакетов - lower_case с подчёркиваниями

Мы используем 6и уровневую архитектуру
3и уровня MVC
2а уровня DAO и DTO
и слой бизнес- и интеграционной логики.

Соответственно, кажадая подсистема выделяется в отдельный базовый пакет
например few.common.users. Внутри базового пакета создаются пакеты в соответствии с архитектурными уровнями.
dao
dto
service (бизнес и интеграционная логика)
model
controller
(view - находится в папке веб-ресурсов, т.к. представлена FTL-файлами)

Так же могут появляеться дополнительные пакеты:
utils   - простые утилиты
servlet - сервлеты, для выдачи специфических данных (например генерация картинок)
mail    - шаблоны писем
bind    - для классов, связывающих подсистему с внешними обработчиками событий (servlet и few listener'ы)
job     - для задач кварца или другого планировщика
и т.п.

2. Структура проектов
/PROJECT_NAME
  /modules      папка с модулями проекта
    /project-data (dao/dto, service)
    /project-web (model, view, controller)
    /project-<>
  /depends      папка с исходниками зависимых проектов
    /FEW
  /lib
    /library-x.x
      lib.jar
      lib-src.jar
    /...
  /scripts      папка со всеми скриптами, конфигурационными файлами и т.п.
    rebuild.sh
    /production-conf...
  /docs
    <документация>
  /out          рабочая папка IDEA
  /test-zone       папка с тестовым омкатом
  build.xml
  PROJECT.ipr

3. Код
Классы
  CamelCase
  предопределённые постфиксы:
    <>Controller - C
    <>Model      - M
    <>Service    - dao, service
    <>Impl       - реализация для интерфейсов
    <>           - dto
    <>Mail       - mail template
    <>Test       - unit-test
  
  префиксы
    Base<>       - все абстрактные классы

Филды
  Есть две большие разницы:
  1. поля DTO и Model классов, которые биндятся на БД, XML и/или используются в шаблонах -
       именуются lower_case.
       --> т.е. это всё, что относится к объектам передачи/сохранения/обмена данными.
       крайне желательно, что бы все эти(подобные) классы были immutable
  2. все остальные поля - 
       camelCase
 
Методы
  camelCase как обычно
  методы DAO с префиксами create/select/update/delete
  action-методы - camelCase 
 
Таблицы
  lower_case
   списки, множественные числа?

Поля
  primary key, foregein keys 
    и т.п.
XML
  имена тэгов, типов, аттрибутов.
  когда использовать аттрибуты - когда элементы

Файлы маппинга
  CammelCase.xml


Контроллеры
  lower_case
  
Action'ы (имена методов)
  camelCase

Модели
  lower_case

Параметры запросов (параметры формы и action-метода)
  lower_case

Страницы
  lower_case

Макросы/блоки и т.п.
  lower_case
  Префиксы:
    b_ - блок (макрос)
    e_ - элемент (макрос для использования только внутри блока)
    модификатор - префик m_ для аттрибутов блока
    m_ - составные блоки, частные случаи (представляет "обёртку" для сложных блоков. Например m_messages)
    f_ - служебные макросы (конвертирование значений, получение дескрипторов, перебор коллекций и т.п.)
       - модельки                                                                                     
       - импорты -> по названию файла



